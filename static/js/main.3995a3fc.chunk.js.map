{"version":3,"sources":["components/Header.jsx","components/AddToDo.jsx","components/ToDo.jsx","components/ToDoList.jsx","components/App.jsx","index.jsx"],"names":["Header","className","AddToDo","addToDoHandler","clearCompletedHandler","todoref","useRef","addTodo","Todo","current","value","alert","type","autoFocus","placeholder","ref","onKeyPress","e","key","onClick","ToDo","todo","deleteTodoHandler","index","checkedHandler","editTodoHandler","myClassName","completed","checked","id","onChange","style","cursor","userSelect","onDoubleClick","newTodo","window","prompt","name","changeTodo","color","ToDoList","todos","completedTodos","filter","map","length","App","useState","settodos","useEffect","localStorage","getItem","setItem","JSON","stringify","retrievedTodos","parse","myTodo","confirm","newTodos","find","newName","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3995a3fc.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className=\"container-fluid py-2 text-center bg-primary text-light\">\r\n            <h1>MY TODOS LIST</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useRef } from 'react';\r\nexport const AddToDo = ({ addToDoHandler, clearCompletedHandler }) => {\r\n    const todoref = useRef();\r\n    const addTodo = () => {\r\n        const Todo = todoref.current.value;\r\n        if (Todo === \"\") {\r\n            alert(\"No todos to add\");\r\n            return;\r\n        }\r\n        addToDoHandler(Todo);\r\n        todoref.current.value = \"\";\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"input-group my-3\">\r\n                <input type=\"text\" className=\"form-control\" autoFocus placeholder=\"Add ToDo\" aria-label=\"ToDos\"\r\n                    aria-describedby=\"button-addon2\" ref={todoref} onKeyPress={(e) => { if (e.key === 'Enter') addTodo(); }} />\r\n                <button className=\"btn btn-outline-primary\" type=\"button\" onClick={() => addTodo()}>Add Todo</button>\r\n                <button className=\"btn btn-outline-danger\" type=\"button\" onClick={() => clearCompletedHandler()}>Clear Completed</button>\r\n            </div>\r\n            <p className=\"text-muted\">Double click on ToDo to edit.</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const ToDo = ({ todo, deleteTodoHandler, index, checkedHandler, editTodoHandler }) => {\r\n    let iconStyle = {\r\n        cursor: 'pointer',\r\n        color: 'red'\r\n    }\r\n    const todoStyle = {\r\n        cursor: 'pointer',\r\n        userSelect: 'none'\r\n    }\r\n    const changeTodo = (todo) => {\r\n        const newTodo = window.prompt(\"Enter new ToDo\", todo.name);\r\n        if (newTodo === null || newTodo === \"\") return;\r\n        editTodoHandler(todo, newTodo);\r\n    }\r\n    const myClassName = (todo.completed) ? \"m-0 fs-5 text-decoration-line-through\" : \"m-0 fs-5\";\r\n    return (\r\n        <div className=\"d-flex align-items-center my-2 px-2\">\r\n            <input className=\"form-check-input mx-2\" type=\"checkbox\" checked={todo.completed} id=\"flexCheckDefault\" onChange={() => checkedHandler(todo)} />\r\n            <p className={myClassName} style={todoStyle} onDoubleClick={() => changeTodo(todo)}>{index + 1}. {todo.name}</p>\r\n            <i className=\"bi bi-trash d-block ms-auto pe-2 fs-4\" onClick={() => deleteTodoHandler(todo)} style={iconStyle}></i>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ToDo } from './ToDo';\r\nexport const ToDoList = ({ todos, deleteTodoHandler, checkedHandler, editTodoHandler }) => {\r\n    const completedTodos = todos.filter((e) => { return !e.completed; });\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"text-decoration-underline\">My ToDos:</h2>\r\n            {todos.map((todo, index) => {\r\n                return <ToDo todo={todo} key={index} index={index} deleteTodoHandler={deleteTodoHandler} checkedHandler={checkedHandler} editTodoHandler={editTodoHandler} />;\r\n            })}\r\n            <p className=\"text-muted\">{completedTodos.length} left to do.</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Header } from \"./Header\";\nimport { AddToDo } from \"./AddToDo\";\nimport { ToDoList } from \"./ToDoList\";\nfunction App() {\n  const [todos, settodos] = useState([]);\n\n  useEffect(() => {\n    if (localStorage.getItem('ToDos') === null)\n      localStorage.setItem('ToDos', JSON.stringify([{ name: 'Sample ToDo', completed: false }]));\n    const retrievedTodos = JSON.parse(localStorage.getItem('ToDos'));\n    settodos(retrievedTodos);\n  }, []);\n\n  useEffect(() => { localStorage.setItem('ToDos', JSON.stringify(todos)) }, [todos]);\n\n  const addToDoHandler = (todo) => {\n    const myTodo = { name: todo, completed: false };\n    settodos([...todos, myTodo]);\n  }\n  const deleteTodoHandler = (todo) => {\n    if (!todo.completed) {\n      if (!window.confirm(\"Do you want to delete this todo it is still not completed\"))\n        return;\n    }\n    settodos(todos.filter((e) => {\n      return e !== todo;\n    }));\n  }\n  const checkedHandler = (todo) => {\n    const newTodos = [...todos];\n    const newTodo = newTodos.find((e) => { return e === todo });\n    newTodo.completed = !newTodo.completed;\n    settodos(newTodos);\n  }\n  const clearCompletedHandler = () => {\n    if (window.confirm('Are you sure?')) {\n      settodos(todos.filter((e) => { return !e.completed }));\n    }\n  }\n  const editTodoHandler = (todo, newName) => {\n    const newTodos = [...todos];\n    const newTodo = newTodos.find((e) => { return e === todo; });\n    newTodo.name = newName;\n    settodos(newTodos);\n  }\n  return (<>\n    <Header />\n    <AddToDo addToDoHandler={addToDoHandler} clearCompletedHandler={clearCompletedHandler} />\n    <ToDoList todos={todos} deleteTodoHandler={deleteTodoHandler} checkedHandler={checkedHandler} editTodoHandler={editTodoHandler} />\n  </>);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}